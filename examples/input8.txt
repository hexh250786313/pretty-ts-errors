{"range":{"start":{"line":74,"character":32},"end":{"line":74,"character":52}},"message":"Type '(_document: TextDocument, position: Position, _token: CancellationToken, context: CompletionContext) => Promise<...>' is not assignable to type '(document: LinesTextDocument, position: Position, token: CancellationToken, context?: CompletionContext | undefined) => ProviderResult<...>'. \n  Type 'Promise<CompletionList | { items: {}[]; isIncomplete: true; } | null>' is not assignable to type 'ProviderResult<CompletionItem[] | CompletionList>'. \n    Type 'Promise<CompletionList | { items: {}[]; isIncomplete: true; } | null>' is not assignable to type 'Thenable<CompletionItem[] | CompletionList | null | undefined>'. \n      Types of property 'then' are incompatible. \n        Type '<TResult1 = CompletionList | { items: {}[]; isIncomplete: true; } | null, TResult2 = never>(onfulfilled?: ((value: CompletionList | { items: {}[]; isIncomplete: true; } | null) => TResult1 | PromiseLike<...>) | null | undefined, onrejected?: ((reason: any) => TResult2 | PromiseLike<...>) | ... 1 more ... | undefined...' is not assignable to type '{ <TResult>(onfulfilled?: ((value: CompletionItem[] | CompletionList | null | undefined) => TResult | Thenable<TResult>) | undefined, onrejected?: ((reason: any) => TResult | Thenable<...>) | undefined): Thenable<...>; <TResult>(onfulfilled?: ((value: CompletionItem[] | ... 2 more ... | undefined) => TResult | Thena...'. \n          Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible. \n            Type '((value: CompletionItem[] | CompletionList | null | undefined) => any) | undefined' is not assignable to type '((value: CompletionList | { items: {}[]; isIncomplete: true; } | null) => any) | null | undefined'. \n              Type '(value: CompletionItem[] | CompletionList | null | undefined) => any' is not assignable to type '(value: CompletionList | { items: {}[]; isIncomplete: true; } | null) => any'. \n                Types of parameters 'value' and 'value' are incompatible. \n                  Type 'CompletionList | { items: {}[]; isIncomplete: true; } | null' is not assignable to type 'CompletionItem[] | CompletionList | null | undefined'. \n                    Type '{ items: {}[]; isIncomplete: true; }' is not assignable to type 'CompletionItem[] | CompletionList | null | undefined'. \n                      Type '{ items: {}[]; isIncomplete: true; }' is not assignable to type 'CompletionList'. \n                        Types of property 'items' are incompatible. \n                          Type '{}[]' is not assignable to type 'CompletionItem[]'. \n                            Property 'label' is missing in type '{}' but required in type 'CompletionItem'.","code":2769,"severity":1,"source":"tsserver","relatedInformation":[]}
