{"range":{"start":{"line":74,"character":32},"end":{"line":74,"character":52}},"message":"Type 'LazyExoticComponent<FunctionComponent<{ readonly stepController: { readonly step: number; readonly next: () => void; readonly back: (index?: number | undefined) => void; }; readonly flowDataController: { getFlowData: <T extends OperateType>(operateType?: T | undefined) => FlowDataStore | FlowDataType<...>; saveFlowD...' is not assignable to type 'ComponentType'.\n  Type 'LazyExoticComponent<FunctionComponent<{ readonly stepController: { readonly step: number; readonly next: () => void; readonly back: (index?: number | undefined) => void; }; readonly flowDataController: { getFlowData: <T extends OperateType>(operateType?: T | undefined) => FlowDataStore | FlowDataType<...>; saveFlowD...' is not assignable to type 'FunctionComponent<{}>'.\n    Types of parameters 'props' and 'props' are incompatible.\n      Type '{ children?: ReactNode; }' is not assignable to type '{ readonly stepController: { readonly step: number; readonly next: () => void; readonly back: (index?: number | undefined) => void; }; readonly flowDataController: { getFlowData: <T extends OperateType>(operateType?: T | undefined) => FlowDataStore | FlowDataType<...>; saveFlowData: <T extends OperateType>(operateTy...'.\n        Type '{ children?: ReactNode; }' is missing the following properties from type '{ readonly stepController: { readonly step: number; readonly next: () => void; readonly back: (index?: number | undefined) => void; }; readonly flowDataController: { getFlowData: <T extends OperateType>(operateType?: T | undefined) => FlowDataStore | FlowDataType<...>; saveFlowData: <T extends OperateType>(operateTy...': stepController, flowDataController, areaListController, operateTypeController, and 2 more.","code":2769,"severity":1,"source":"tsserver","relatedInformation":[]}
